{"version":3,"sources":["../../../clientjs/rmain.js"],"names":["Colors","App","state","selectedUser","userFriends","circleList","userName","rateExceeded","handleChange","bind","handleSubmit","clickCircleButton","clickShowCircleButton","clickTile","event","setState","target","value","preventDefault","fetch","headers","method","body","JSON","stringify","name","then","res","json","console","log","error","circle","window","open","TargetInput","props","nextProps","SelectedUserPanel","profile_image_url","screen_name","User","imgSrc","screenName","CircleList","map","user","url","profile_background_image_url","render","document","getElementById"],"mappings":"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","file":"rmain.js","sourcesContent":["/**\n * Created by rat on 18/07/17.\n */\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Avatar from 'material-ui/Avatar';\nimport {List, ListItem} from 'material-ui/List';\nimport {GridList, GridTile} from 'material-ui/GridList';\nimport FontIcon from 'material-ui/FontIcon';\nimport * as Colors from 'material-ui/styles/colors';\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedUser: [],\n            userFriends: [],\n            circleList: [],\n            userName: '',\n            rateExceeded: false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.clickCircleButton = this.clickCircleButton.bind(this);\n        this.clickShowCircleButton = this.clickShowCircleButton.bind(this);\n\n        this.clickTile = this.clickTile.bind(this);\n\n    }\n\n    handleChange(event) {\n        this.setState( {userName: event.target.value} );\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        fetch('/tw/searchUser',\n            {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify({name: this.state.userName})\n            }).then( res => {\n            res.json().then(\n                res => {\n                    console.log(res);\n                    // const gotUser = res.map( function ( user ) {\n                    //     console.log(user);\n                    //     return user;\n                    // });\n                    this.setState({selectedUser: res, rateExceeded: false});\n                }\n            );\n        }, function (error) {\n            console.log(error);\n            this.setState({rateExceeded: true});\n        });\n\n        // alert('Submitted : ' + this.props.userName );\n    }\n\n    clickCircleButton() {\n        console.log('Click');\n\n        fetch('/tw/circle',\n            {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify({name: this.state.userName})\n            }).then( res => {\n            res.json().then(\n                res => {\n                    console.log(res);\n                }\n            );\n        }, function (error) {\n            console.log(error);\n            this.setState({rateExceeded: true});\n        });\n\n    }\n\n    clickShowCircleButton() {\n        console.log('Show');\n\n        fetch('/tw/showCircle',\n            {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify({name: this.state.userName})\n            }).then( res => {\n            res.json().then(\n                res => {\n                    console.log(res);\n                    this.setState({circleList: res.circle});\n                }\n            );\n        }, function (error) {\n            console.log(error);\n            this.setState({rateExceeded: true});\n        });\n\n    }\n\n    clickTile(event) {\n        event.preventDefault();\n        window.open( event.target.value);\n    }\n\n    \n    render() {\n        if ( this.state.rateExceeded === false ) {\n            return (\n                <MuiThemeProvider>\n                    <BrowserRouter>\n                        <div className=\"app\">\n                            <h1>Appp</h1>\n                            <TargetInput handleSubmit={this.handleSubmit} handleChange={this.handleChange}\n                                         clickCircleButton={this.clickCircleButton} clickShowCircleButton={this.clickShowCircleButton} selectedUser={this.state.selectedUser}\n                                         userName={this.state.userName}/>\n                            <CircleList circleList={this.state.circleList} clickTile={this.clickTile }/>\n                        </div>\n                    </BrowserRouter>\n                </MuiThemeProvider>\n            );\n        } else {\n            return (\n                <MuiThemeProvider>\n                    <BrowserRouter>\n                        <div className=\"app\">\n                            <h1>Appp</h1>\n                            <span>Rate limit exceeded</span>\n                            <TargetInput handleSubmit={this.handleSubmit} handleChange={this.handleChange}\n                                         clickCircleButton={this.clickCircleButton} clickShowCircleButton={this.clickShowCircleButton} selectedUser={this.state.selectedUser}\n                                         userName={this.state.userName}/>\n                            <CircleList circleList={this.state.circleList} clickTile={this.clickTile }/>\n                        </div>\n                    </BrowserRouter>\n                </MuiThemeProvider>\n            );\n        }\n    }\n}\n\nclass TargetInput extends Component {\n    constructor(props) {\n        super(props);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ selectedUser: nextProps.selectedUser, userName: nextProps.userName });\n    }\n\n    render() {\n        return(\n            <div>\n                <SelectedUserPanel selectedUser={this.props.selectedUser} userName={this.props.userName}/>\n                <form onSubmit={this.props.handleSubmit.bind(this)}>\n                    <input type=\"text\" placeholder=\"username\" onChange={this.props.handleChange} />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <RaisedButton onClick={this.props.clickCircleButton}>Build Circle</RaisedButton>\n                <RaisedButton onClick={this.props.clickShowCircleButton}>Show Circle</RaisedButton>\n            </div>\n        )\n    }\n}\n\nclass SelectedUserPanel extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ selectedUser: nextProps.selectedUser });\n    }\n\n\n    render() {\n        console.log( this.props);\n        if ( this.props.selectedUser ) {\n            return(\n                <div>\n                    <Avatar src={this.props.selectedUser.profile_image_url} size={50} />\n                    <span>{this.props.selectedUser.screen_name}</span>&nbsp;<span>{this.props.selectedUser.name}</span>\n                </div>\n            )\n        } else {\n            return(\n                <div>\n                    <p>Selected User: {this.props.userName}</p>\n                    <p>No Selected User</p>\n                </div>\n            )\n        }\n    }\n\n}\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <img src={this.props.imgSrc} />\n                <span>{this.props.screenName}</span>&nbsp;<span>{this.props.name}</span>\n            </div>\n        )\n    }\n\n}\n\nclass CircleList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ circleList: nextProps.circleList });\n    }\n\n\n    render() {\n        return(\n            <div>\n                <GridList cols={10} cellHeight={150} children={ this.props.circleList.map(\n                    (user) => <GridTile subtitle={'@' + user.screen_name} title={user.name} actionIcon={<img src={user.profile_image_url}/>} actionPosition='left'  children={ <a href={user.url}><img src={user.profile_background_image_url} /></a>} /> )}/>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n<App/>,\n    document.getElementById('root')\n);"]}